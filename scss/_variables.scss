/*
 * _variables.scss
 * This file defines all the global variables used throughout the framework
 * It imports the functions module to use its utilities for generating values
 */
@use 'functions';

/*
 * Base Colors
 * Primary color palette that serves as the foundation for the application
 * These colors are used directly and also to generate variants (light/dark/muted)
 */
$base-colors: (
  primary: #55B785,   // Main brand color for primary elements
  secondary: #808181, // Secondary UI elements, less prominent than primary
  info: #0099FF,      // Informational UI elements (notifications, badges)
  success: #30DF3E,   // Success indicators, confirmations, positive actions
  warning: #FB8609,   // Warning indicators, proceed with caution actions
  danger: #DF3030,    // Error states, destructive actions, critical alerts
  text: #121212,      // Default text color for the application
  white: #FFFFFF,     // Pure white for backgrounds, text on dark colors
  black: #000000      // Pure black for high contrast elements
);

/*
 * Theme Colors
 * Expanded color set that includes all base colors plus their variants
 * Uses the generate-theme-color-variants function to automatically create
 * light, dark and muted versions of each base color
 */
$theme-colors: map-merge(
  $base-colors,
  functions.generate-theme-color-variants($base-colors)
);

/*
 * Grid Column Sizes
 * Defines width percentages for a 12-column grid system
 * Generated dynamically using the generate-columns function
 */
$column-sizes: functions.generate-columns(12);

/*
 * Utility Sizes
 * Container width percentages from 5% to 95% in increments of 5%
 * Used for setting consistent width values throughout the application
 * Parameters: starting value (1), number of steps (19), increment value (5)
 */
$utility-sizes: functions.generate-utility-sizes(1, 19, 5);

/*
 * Spacing Sizes
 * Consistent spacing values for margins, padding, and gaps
 * Generates a scale based on a base value and exponential progression
 * Parameters: base value (0.25rem), scale factor (1), number of steps (12)
 */
$spacing-sizes: functions.generate-spacing-sizes(0.25rem, 1, 12);

/*
 * Typography Sizes
 * Font size values for different text elements in the application
 * Uses rem units to maintain proportional scaling based on root font size
 */
$font-sizes: (
  caption: 0.75rem,  // Small text like captions or footnotes
  small: 0.875rem,   // Secondary information, metadata
  body: 1rem,        // Base font size for body text
  h1: 3rem,          // Main headings
  h2: 2.5rem,        // Secondary headings
  h3: 2rem,          // Tertiary headings
  h4: 1.75rem,       // Fourth level headings
  h5: 1.5rem,        // Fifth level headings
  h6: 1.25rem        // Sixth level headings
);

/*
 * Line Heights
 * Standard line height values for maintaining consistent vertical rhythm
 * These unitless values are multiplied by the element's font size
 */
$line-heights: (
  normal: 1.5,   // Standard reading line height for body text
  small: 1.25,   // Tighter line height for headings or dense content
  large: 2       // Looser line height for improved readability
);

/*
 * Breakpoints
 * Media query breakpoints for responsive design
 * Follows common device dimension patterns for consistent layouts
 */
$breakpoints: (
  xs: 'screen and (max-width: 575px)',     // Extra small devices (portrait phones)
  sm: 'screen and (min-width: 576px)',     // Small devices (landscape phones)
  md: 'screen and (min-width: 768px)',     // Medium devices (tablets)
  lg: 'screen and (min-width: 992px)',     // Large devices (desktops)
  xl: 'screen and (min-width: 1200px)',    // Extra large devices (large desktops)
  xxl: 'screen and (min-width: 1400px)'    // Extra extra large devices (larger desktops)
);