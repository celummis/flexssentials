@use 'reset.scss';
@use 'sass:map';
@use 'sass:color';

/* Complete Flexssentials SCSS framework integrated with CSS variables for one foundational SCSS framework file */

// variables
:root {
  --primary: #55B785;
  --primary-light: #{color.scale(#55B785, $lightness: 15%)};
  --primary-dark: #{color.scale(#55B785, $lightness: -30%)};
  --primary-muted: #{color.scale(#55B785, $saturation: -100%)};
  --secondary: #808181;
  --secondary-light: #{color.scale(#808181, $lightness: 15%)};
  --secondary-dark: #{color.scale(#808181, $lightness: -30%)};
  --secondary-muted: #{color.scale(#808181, $saturation: -100%)};
  --info: #0099FF;
  --info-light: #{color.scale(#0099FF, $lightness: 15%)};
  --info-dark: #{color.scale(#0099FF, $lightness: -30%)};
  --info-muted: #{color.scale(#0099FF, $saturation: -100%)};
  --success: #30DF3E;
  --success-light: #{color.scale(#30DF3E, $lightness: 15%)};
  --success-dark: #{color.scale(#30DF3E, $lightness: -30%)};
  --success-muted: #{color.scale(#30DF3E, $saturation: -100%)};
  --warning: #FB8609;
  --warning-light: #{color.scale(#FB8609, $lightness: 15%)};
  --warning-dark: #{color.scale(#FB8609, $lightness: -30%)};
  --warning-muted: #{color.scale(#FB8609, $saturation: -100%)};
  --danger: #DF3030;
  --danger-light: #{color.scale(#DF3030, $lightness: 15%)};
  --danger-dark: #{color.scale(#DF3030, $lightness: -30%)};
  --danger-muted: #{color.scale(#DF3030, $saturation: -100%)};
  --white: #FFFFFF;
  --black: #000000;

  // Grid Columns
  --col-12: 100%;
  --col-11: 91.6666666667%;
  --col-10: 83.3333333333%;
  --col-9: 75%;
  --col-8: 66.6666666667%;
  --col-7: 58.3333333333%;
  --col-6: 50%;
  --col-5: 41.6666666667%;
  --col-4: 33.3333333333%;
  --col-3: 25%;
  --col-2: 16.6666666667%;
  --col-1: 8.3333333333%;

  // Spacing
  --none: 0;
  --xs: 0.25rem;
  --sm: 0.5rem;
  --md: 1rem;
  --lg: 1.5rem;
  --xl: 2rem;
  --xxl: 3rem;

  // Utility Sizes
  --w-100: 100%;
  --w-95: 95%;
  --w-90: 90%;
  --w-85: 85%;
  --w-80: 80%;
  --w-75: 75%;
  --w-70: 70%;
  --w-65: 65%;
  --w-60: 60%;
  --w-55: 55%;
  --w-50: 50%;
  --w-45: 45%;
  --w-40: 40%;
  --w-35: 35%;
  --w-30: 30%;
  --w-25: 25%;
  --w-20: 20%;
  --w-15: 15%;
  --w-10: 10%;

  // Font sizes
  --footnote: 0.75rem;
  --caption: 0.85rem;
  --body: 1rem;
  --h1: 3rem;
  --h2: 2.5rem;
  --h3: 2rem;
  --h4: 1.75rem;
  --h5: 1.5rem;
  --h6: 1.25rem;

  // Font styles
  --normal: normal;
  --bold: bold;
  --italic: italic;
  --uppercase: uppercase;
  --lowercase: lowercase;
  --capitalize: capitalize;

  // Line heights
  --normal: 1.5;
  --small: 1.25;
  --large: 2;

  // Breakpoints
  --break-xs: 576px;
  --break-sm: 768px;
  --break-md: 992px;
  --break-lg: 1200px;
  --break-xl: 1400px;
}

// functions

// Retrieve grid column width
@function column($size) {
  @return var(--col-#{$size});
}

// Retrieve utility container size
@function container($size) {
  @return var(--w-#{$size});
}

// Retrieve spacing value
@function spacing($size) {
  @return var(--#{$size});
}

// Retrieve theme color
@function color($color-name) {
  @return var(--#{$color-name});
}

// Retrieve font size
@function font($size) {
  @return var(--#{$size});
}

// Retrieve font style
@function style($type) {
  @return var(--#{$type});
}

// Retrieve line height
@function scale($size) {
  @return var(--#{$size});
}

// Retrieve breakpoint
@function breakpoint($size) {
  @return var(--break-#{$size});
}

// mixins

@mixin flexbox($direction: row, $justify: flex-start, $items: stretch, $content: normal, $wrap: nowrap, $gap: null) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $items;
  align-content: $content;
  flex-wrap: $wrap;
  @if $gap != null { gap: spacing($gap); }
}

@mixin responsive($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}";
  }
}


